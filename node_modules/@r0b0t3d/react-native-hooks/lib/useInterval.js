"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = require("react");
/**
 * Hook to run code block in interval time
 *
 * @export
 * @param {Callback} callback code block to be run
 * @param {number} [delay=-1] If you like to stop this timer, just set it to -1.
 * @param {boolean} [firstTick=false] whether callback will be triggered at the start of window time
 */
function useInterval(callback, delay = -1, firstTick = false) {
    const savedCallback = react_1.useRef();
    // Remember the latest callback.
    react_1.useEffect(() => {
        savedCallback.current = callback;
    }, [callback]);
    // Set up the interval.
    react_1.useEffect(() => {
        if (delay < 0) {
            return () => { };
        }
        function tick() {
            savedCallback.current && savedCallback.current();
        }
        if (firstTick) {
            tick();
        }
        const id = setInterval(tick, delay);
        return () => {
            clearInterval(id);
        };
    }, [delay]);
}
exports.default = useInterval;
//# sourceMappingURL=useInterval.js.map